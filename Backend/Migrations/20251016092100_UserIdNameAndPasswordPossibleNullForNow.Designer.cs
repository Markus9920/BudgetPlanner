// <auto-generated />
using System;
using BudgetPlanner.Backend.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BudgetPlanner.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251016092100_UserIdNameAndPasswordPossibleNullForNow")]
    partial class UserIdNameAndPasswordPossibleNullForNow
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("BudgetPlanner.Backend.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Category1"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Category2"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Category3"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Category4"
                        });
                });

            modelBuilder.Entity("BudgetPlanner.Backend.Models.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecurrTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExpenseId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("BudgetPlanner.Backend.Models.LastOccurrDate", b =>
                {
                    b.Property<int>("LastOccurrDateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastOccurrence")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LastOccurrDateId");

                    b.HasIndex("ExpenseId");

                    b.HasIndex("UserId");

                    b.ToTable("LastOccurrDates");
                });

            modelBuilder.Entity("BudgetPlanner.Backend.Models.RecurrType", b =>
                {
                    b.Property<int>("RecurrTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RecurrTypeId");

                    b.ToTable("RecurringTypes");

                    b.HasData(
                        new
                        {
                            RecurrTypeId = 1,
                            Name = "Once"
                        },
                        new
                        {
                            RecurrTypeId = 2,
                            Name = "Monthly"
                        },
                        new
                        {
                            RecurrTypeId = 3,
                            Name = "Yearly"
                        });
                });

            modelBuilder.Entity("BudgetPlanner.Backend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BudgetPlanner.Backend.Models.Expense", b =>
                {
                    b.HasOne("BudgetPlanner.Backend.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("BudgetPlanner.Backend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BudgetPlanner.Backend.Models.LastOccurrDate", b =>
                {
                    b.HasOne("BudgetPlanner.Backend.Models.Expense", "Expense")
                        .WithMany()
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgetPlanner.Backend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Expense");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
